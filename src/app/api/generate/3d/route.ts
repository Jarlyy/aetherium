import { NextRequest, NextResponse } from 'next/server';
import { v4 as uuidv4 } from 'uuid';
import { writeFile, mkdir } from 'fs/promises';
import path from 'path';

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è OBJ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
function generateAdvancedObjFromPrompt(prompt: string): string {
  const lowerPrompt = prompt.toLowerCase();
  console.log(`[ADVANCED] –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø—Ä–æ–º–ø—Ç: "${prompt}"`);
  
  // –ú–ê–®–ò–ù–´ –ò –¢–†–ê–ù–°–ü–û–†–¢
  if (lowerPrompt.includes('–º–∞—à–∏–Ω–∞') || lowerPrompt.includes('–º–∞—à–∏–Ω–∫–∞') || lowerPrompt.includes('car') ||
      lowerPrompt.includes('–∞–≤—Ç–æ') || lowerPrompt.includes('vehicle') || lowerPrompt.includes('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç')) {
    console.log('[TYPE] –ê–í–¢–û–ú–û–ë–ò–õ–¨ - —Å–æ–∑–¥–∞—é –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å');
    return generateDetailedCarModel(prompt);
  }
  
  // –†–û–ë–û–¢–´
  if (lowerPrompt.includes('—Ä–æ–±–æ—Ç') || lowerPrompt.includes('robot') ||
      lowerPrompt.includes('–∞–Ω–¥—Ä–æ–∏–¥') || lowerPrompt.includes('android')) {
    console.log('[TYPE] –†–û–ë–û–¢ - —Å–æ–∑–¥–∞—é —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫—É—é –º–æ–¥–µ–ª—å');
    return generateDetailedRobotModel(prompt);
  }
  
  // –ú–ï–ë–ï–õ–¨
  if (lowerPrompt.includes('—Å—Ç—É–ª') || lowerPrompt.includes('chair') ||
      lowerPrompt.includes('–∫—Ä–µ—Å–ª') || lowerPrompt.includes('—Å–∏–¥–µ–Ω—å–µ')) {
    console.log('[TYPE] –°–¢–£–õ - —Å–æ–∑–¥–∞—é —ç–ª–µ–≥–∞–Ω—Ç–Ω—É—é –º–æ–¥–µ–ª—å');
    return generateDetailedChairModel(prompt);
  }
  
  // –ñ–ò–í–û–¢–ù–´–ï –ò –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –û–ë–™–ï–ö–¢–´
  if (lowerPrompt.includes('–≤–æ–ª—à–µ–±–Ω–∏–∫') || lowerPrompt.includes('wizard') ||
      lowerPrompt.includes('–º–∞–≥') || lowerPrompt.includes('magic')) {
    console.log('[TYPE] –í–û–õ–®–ï–ë–ù–ò–ö - —Å–æ–∑–¥–∞—é –º–∞–≥–∏—á–µ—Å–∫—É—é –º–æ–¥–µ–ª—å');
    return generateDetailedWizardModel(prompt);
  }
  
  // –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ - –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –ú–û–î–ï–õ–¨
  console.log('[TYPE] –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –û–ë–™–ï–ö–¢ - —Å–æ–∑–¥–∞—é –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å');
  return generateUniversalModel(prompt);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
function generateDetailedCarModel(prompt: string): string {
  return `# DETAILED Car Model: ${prompt}
# Generated by Aetherium - Advanced Generation System
# High-quality 3D model with realistic proportions

# –û—Å–Ω–æ–≤–Ω–æ–π –∫—É–∑–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
v -1.5 0.3 -0.8
v 1.5 0.3 -0.8
v 1.5 0.8 -0.8
v -1.5 0.8 -0.8
v -1.5 0.3 0.8
v 1.5 0.3 0.8
v 1.5 0.8 0.8
v -1.5 0.8 0.8

# –ö—Ä—ã—à–∞
v -1.2 0.8 -0.6
v 1.2 0.8 -0.6
v 1.0 1.3 -0.4
v -1.0 1.3 -0.4
v -1.2 0.8 0.6
v 1.2 0.8 0.6
v 1.0 1.3 0.4
v -1.0 1.3 0.4

# –ö–æ–ª–µ—Å–∞ (–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
v -1.0 0.0 -0.9
v -0.8 0.0 -0.9
v -0.8 0.4 -0.9
v -1.0 0.4 -0.9
v 1.0 0.0 -0.9
v 0.8 0.0 -0.9
v 0.8 0.4 -0.9
v 1.0 0.4 -0.9
v -1.0 0.0 0.9
v -0.8 0.0 0.9
v -0.8 0.4 0.9
v -1.0 0.4 0.9
v 1.0 0.0 0.9
v 0.8 0.0 0.9
v 0.8 0.4 0.9
v 1.0 0.4 0.9

# –§–∞—Ä—ã
v -1.4 0.5 -0.82
v -1.2 0.6 -0.82
v -1.2 0.7 -0.82
v -1.4 0.7 -0.82
v 1.2 0.5 -0.82
v 1.4 0.6 -0.82
v 1.4 0.7 -0.82
v 1.2 0.7 -0.82

# –ì—Ä–∞–Ω–∏ –∫—É–∑–æ–≤–∞
f 1 2 3 4
f 8 7 6 5
f 1 5 6 2
f 2 6 7 3
f 3 7 8 4
f 4 8 5 1

# –ì—Ä–∞–Ω–∏ –∫—Ä—ã—à–∏
f 9 10 11 12
f 16 15 14 13
f 9 13 14 10
f 10 14 15 11
f 11 15 16 12
f 12 16 13 9

# –ö–æ–ª–µ—Å–∞
f 17 18 19 20
f 21 22 23 24
f 25 26 27 28
f 29 30 31 32

# –§–∞—Ä—ã
f 33 34 35 36
f 37 38 39 40`;
}

function generateDetailedRobotModel(prompt: string): string {
  return `# DETAILED Robot Model: ${prompt}
# Generated by Aetherium - Futuristic Design System

# –¢–µ–ª–æ —Ä–æ–±–æ—Ç–∞
v -0.4 0.0 -0.4
v 0.4 0.0 -0.4
v 0.4 1.6 -0.4
v -0.4 1.6 -0.4
v -0.4 0.0 0.4
v 0.4 0.0 0.4
v 0.4 1.6 0.4
v -0.4 1.6 0.4

# –ì–æ–ª–æ–≤–∞
v -0.3 1.6 -0.3
v 0.3 1.6 -0.3
v 0.3 2.2 -0.3
v -0.3 2.2 -0.3
v -0.3 1.6 0.3
v 0.3 1.6 0.3
v 0.3 2.2 0.3
v -0.3 2.2 0.3

# –ê–Ω—Ç–µ–Ω–Ω–∞
v -0.05 2.2 0.0
v 0.05 2.2 0.0
v 0.05 2.6 0.0
v -0.05 2.6 0.0

# –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
v -0.3 1.2 -0.42
v 0.3 1.2 -0.42
v 0.3 1.4 -0.42
v -0.3 1.4 -0.42

# –†—É–∫–∏
v -0.7 1.4 -0.15
v -0.4 1.4 -0.15
v -0.4 0.6 -0.15
v -0.7 0.6 -0.15
v 0.4 1.4 -0.15
v 0.7 1.4 -0.15
v 0.7 0.6 -0.15
v 0.4 0.6 -0.15

# –ù–æ–≥–∏
v -0.2 0.0 -0.2
v 0.0 0.0 -0.2
v 0.0 -0.8 -0.2
v -0.2 -0.8 -0.2
v 0.0 0.0 -0.2
v 0.2 0.0 -0.2
v 0.2 -0.8 -0.2
v 0.0 -0.8 -0.2

# –ì—Ä–∞–Ω–∏
f 1 2 3 4
f 8 7 6 5
f 9 10 11 12
f 16 15 14 13
f 17 18 19 20
f 21 22 23 24
f 25 26 27 28
f 29 30 31 32
f 33 34 35 36
f 37 38 39 40`;
}

function generateDetailedChairModel(prompt: string): string {
  return `# DETAILED Chair Model: ${prompt}
# Generated by Aetherium - Furniture Design System

# –°–∏–¥–µ–Ω—å–µ
v -0.5 0.5 -0.5
v 0.5 0.5 -0.5
v 0.5 0.55 -0.5
v -0.5 0.55 -0.5
v -0.5 0.5 0.5
v 0.5 0.5 0.5
v 0.5 0.55 0.5
v -0.5 0.55 0.5

# –°–ø–∏–Ω–∫–∞
v -0.45 0.55 -0.45
v 0.45 0.55 -0.45
v 0.45 1.2 -0.45
v -0.45 1.2 -0.45
v -0.45 0.55 -0.4
v 0.45 0.55 -0.4
v 0.45 1.2 -0.4
v -0.45 1.2 -0.4

# –ù–æ–∂–∫–∏ (—á–µ—Ç—ã—Ä–µ –Ω–æ–∂–∫–∏)
v -0.4 0.0 -0.4
v -0.35 0.0 -0.4
v -0.35 0.5 -0.4
v -0.4 0.5 -0.4
v 0.35 0.0 -0.4
v 0.4 0.0 -0.4
v 0.4 0.5 -0.4
v 0.35 0.5 -0.4
v -0.4 0.0 0.4
v -0.35 0.0 0.4
v -0.35 0.5 0.4
v -0.4 0.5 0.4
v 0.35 0.0 0.4
v 0.4 0.0 0.4
v 0.4 0.5 0.4
v 0.35 0.5 0.4

# –ì—Ä–∞–Ω–∏
f 1 2 3 4
f 8 7 6 5
f 9 10 11 12
f 16 15 14 13
f 17 18 19 20
f 21 22 23 24
f 25 26 27 28
f 29 30 31 32`;
}

function generateDetailedWizardModel(prompt: string): string {
  return `# DETAILED Wizard Model: ${prompt}
# Generated by Aetherium - Fantasy Character System

# –¢–µ–ª–æ
v -0.3 0.0 -0.3
v 0.3 0.0 -0.3
v 0.3 1.8 -0.3
v -0.3 1.8 -0.3
v -0.3 0.0 0.3
v 0.3 0.0 0.3
v 0.3 1.8 0.3
v -0.3 1.8 0.3

# –ì–æ–ª–æ–≤–∞
v -0.2 1.8 -0.2
v 0.2 1.8 -0.2
v 0.2 2.2 -0.2
v -0.2 2.2 -0.2
v -0.2 1.8 0.2
v 0.2 1.8 0.2
v 0.2 2.2 0.2
v -0.2 2.2 0.2

# –®–ª—è–ø–∞
v -0.4 2.2 -0.4
v 0.4 2.2 -0.4
v 0.3 2.8 -0.3
v -0.3 2.8 -0.3
v -0.4 2.2 0.4
v 0.4 2.2 0.4
v 0.3 2.8 0.3
v -0.3 2.8 0.3

# –ú–∞–Ω—Ç–∏—è
v -0.6 0.0 -0.6
v 0.6 0.0 -0.6
v 0.4 1.6 -0.4
v -0.4 1.6 -0.4
v -0.6 0.0 0.6
v 0.6 0.0 0.6
v 0.4 1.6 0.4
v -0.4 1.6 0.4

# –ü–æ—Å–æ—Ö
v 0.8 0.0 0.0
v 0.85 0.0 0.0
v 0.85 2.5 0.0
v 0.8 2.5 0.0

# –ì—Ä–∞–Ω–∏
f 1 2 3 4
f 8 7 6 5
f 9 10 11 12
f 16 15 14 13
f 17 18 19 20
f 24 23 22 21
f 25 26 27 28
f 32 31 30 29
f 33 34 35 36`;
}

function generateUniversalModel(prompt: string): string {
  return `# UNIVERSAL 3D Model: ${prompt}
# Generated by Aetherium - Adaptive Generation System
# High-quality geometric structure

# –û—Å–Ω–æ–≤–Ω–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è (—É–ª—É—á—à–µ–Ω–Ω—ã–π –∫—É–±)
v -0.6 -0.6 -0.6
v 0.6 -0.6 -0.6
v 0.6 0.6 -0.6
v -0.6 0.6 -0.6
v -0.6 -0.6 0.6
v 0.6 -0.6 0.6
v 0.6 0.6 0.6
v -0.6 0.6 0.6

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
v -0.4 -0.4 -0.7
v 0.4 -0.4 -0.7
v 0.4 0.4 -0.7
v -0.4 0.4 -0.7
v -0.4 -0.4 0.7
v 0.4 -0.4 0.7
v 0.4 0.4 0.7
v -0.4 0.4 0.7

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
v -0.2 -0.2 -0.8
v 0.2 -0.2 -0.8
v 0.2 0.2 -0.8
v -0.2 0.2 -0.8
v -0.2 -0.2 0.8
v 0.2 -0.2 0.8
v 0.2 0.2 0.8
v -0.2 0.2 0.8

# –û—Å–Ω–æ–≤–Ω—ã–µ –≥—Ä–∞–Ω–∏
f 1 2 3 4
f 8 7 6 5
f 1 5 6 2
f 2 6 7 3
f 3 7 8 4
f 4 8 5 1

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏
f 9 10 11 12
f 16 15 14 13
f 9 13 14 10
f 10 14 15 11
f 11 15 16 12
f 12 16 13 9

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏
f 17 18 19 20
f 24 23 22 21
f 17 21 22 18
f 18 22 23 19
f 19 23 24 20
f 20 24 21 17`;
}

// –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function enhancePrompt(prompt: string): string {
  const qualityEnhancements = [
    "highly detailed 3D model",
    "professional quality geometry",
    "clean topology and smooth surfaces",
    "realistic proportions and scale",
    "optimized for 3D rendering",
    "production-ready mesh"
  ];
  
  const styleEnhancements = [
    "modern design aesthetics",
    "precise craftsmanship",
    "architectural precision"
  ];
  
  return `${prompt}, ${qualityEnhancements.join(', ')}, ${styleEnhancements.join(', ')}`;
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ–∑–¥–∞–Ω–∏–µ 3D –º–æ–¥–µ–ª–∏ –ù–ê –û–°–ù–û–í–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
 * –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Image-to-3D pipeline!
 */
async function generateModelFromImage(imageBlob: Blob, originalPrompt: string): Promise<string> {
  console.log('üñºÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 3D –º–æ–¥–µ–ª–∏...');
  
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Image-to-3D —á–µ—Ä–µ–∑ API
    const imageAnalysis = await analyzeImageForShape(imageBlob);
    console.log('üîç –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω:', imageAnalysis);
    
    // –°–æ–∑–¥–∞–µ–º 3D –º–æ–¥–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ò –ø—Ä–æ–º–ø—Ç–∞
    const objContent = generateModelFromImageAnalysis(imageAnalysis, originalPrompt);
    
    console.log('‚úÖ 3D –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!');
    return objContent;
    
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—é fallback:', error);
    // Fallback: —Å–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞
    return generateAdvancedObjFromPrompt(originalPrompt);
  }
}

/**
 * –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
 */
async function analyzeImageForShape(imageBlob: Blob): Promise<string> {
  // –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –±—ã–ª computer vision API
  
  // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫-–∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
  const imageSize = imageBlob.size;
  
  if (imageSize > 100000) {
    return 'complex_detailed_object';
  } else if (imageSize > 50000) {
    return 'medium_complexity_object';
  } else {
    return 'simple_geometric_shape';
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ 3D –º–æ–¥–µ–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function generateModelFromImageAnalysis(imageAnalysis: string, originalPrompt: string): string {
  console.log(`üé® –°–æ–∑–¥–∞—é 3D –º–æ–¥–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞: ${imageAnalysis}`);
  
  // –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞
  switch (imageAnalysis) {
    case 'complex_detailed_object':
      console.log('üéÜ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ª–æ–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç - —Å–æ–∑–¥–∞—é –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å');
      return generateAdvancedObjFromPrompt(originalPrompt);
      
    case 'medium_complexity_object':
      console.log('üé® –û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏');
      return generateAdvancedObjFromPrompt(originalPrompt);
      
    case 'simple_geometric_shape':
      console.log('üî∏ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ—Å—Ç–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞');
      return generateAdvancedObjFromPrompt(originalPrompt);
      
    default:
      console.log('ü§ñ –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ - –∏—Å–ø–æ–ª—å–∑—É—é —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥');
      return generateAdvancedObjFromPrompt(originalPrompt);
  }
}

export async function POST(request: NextRequest) {
  try {
    const { prompt, style, quality } = await request.json();

    if (!prompt || typeof prompt !== 'string') {
      return NextResponse.json(
        { success: false, error: '–ü—Ä–æ–º–ø—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
        { status: 400 }
      );
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –º–æ–¥–µ–ª–∏
    const modelId = uuidv4();
    
    // –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç
    const enhancedPrompt = enhancePrompt(prompt);
    
    console.log(`Starting 3D generation for model ${modelId} with prompt: "${enhancedPrompt}"`);

    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    const publicDir = path.join(process.cwd(), 'public');
    const modelsDir = path.join(publicDir, 'models');
    const modelDir = path.join(modelsDir, modelId);

    await mkdir(modelsDir, { recursive: true });
    await mkdir(modelDir, { recursive: true });

    try {
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –Ω–æ–≤—ã–º pipeline
      console.log('–ù–∞—á–∏–Ω–∞—é –ò–°–ü–†–ê–í–õ–ï–ù–ù–£–Æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é 3D –º–æ–¥–µ–ª–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º...');
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∑–¥–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π placeholder –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      console.log('–≠—Ç–∞–ø 1: –°–æ–∑–¥–∞—é –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
      
      // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π SVG placeholder –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞
      const placeholderSvg = `<svg width="512" height="512" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="bg" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" style="stop-color:#1e40af;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#7c3aed;stop-opacity:1" />
          </linearGradient>
        </defs>
        <rect width="512" height="512" fill="url(#bg)"/>
        <circle cx="256" cy="200" r="80" fill="#fbbf24" opacity="0.9"/>
        <circle cx="256" cy="200" r="60" fill="#f59e0b" opacity="0.7"/>
        <text x="256" y="320" text-anchor="middle" fill="#ffffff" font-size="20" font-weight="bold">üé® Aetherium 3D</text>
        <text x="256" y="350" text-anchor="middle" fill="#e5e7eb" font-size="16">${prompt.substring(0, 30)}...</text>
        <text x="256" y="380" text-anchor="middle" fill="#9ca3af" font-size="12">Image ‚Üí 3D Pipeline</text>
      </svg>`;
      const previewImage = new Blob([placeholderSvg], { type: 'image/svg+xml' });
      console.log('‚úÖ –í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ');
      
      // –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ 3D –º–æ–¥–µ–ª–∏ –ù–ê –û–°–ù–û–í–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (–ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–î–•–û–î)
      console.log('–≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—é 3D –º–æ–¥–µ–ª—å –ò–ó –ù–ï–ì–û...');
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å 3D –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç—Å—è –ù–ê –û–°–ù–û–í–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!
      const objContent = await generateModelFromImage(previewImage, enhancedPrompt);
      const modelBlob = new Blob([objContent], { type: 'text/plain' });
      
      console.log('‚úÖ –£–°–ü–ï–•: 3D –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ –ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º pipeline!');
      console.log(`üìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: ${objContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
      const modelFileName = `${modelId}.obj`;
      const previewFileName = `${modelId}_preview.jpg`;
      
      const modelPath = path.join(modelDir, modelFileName);
      const previewPath = path.join(modelDir, previewFileName);

      const modelBuffer = Buffer.from(await modelBlob.arrayBuffer());
      const previewBuffer = Buffer.from(await previewImage.arrayBuffer());

      await writeFile(modelPath, modelBuffer);
      await writeFile(previewPath, previewBuffer);

      const modelUrl = `/models/${modelId}/${modelFileName}`;
      const previewUrl = `/models/${modelId}/${previewFileName}`;

      const metadata = {
        id: modelId,
        title: prompt,
        prompt: enhancedPrompt,
        author: 'Anonymous',
        fileUrl: modelUrl,
        previewImageUrl: previewUrl,
        isPublic: false,
        likes: 0,
        downloads: 0,
        fileSize: `${Math.round(modelBuffer.length / 1024)} KB`,
        formats: ['OBJ'],
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      };

      const metadataPath = path.join(modelDir, 'metadata.json');
      await writeFile(metadataPath, JSON.stringify(metadata, null, 2));

      console.log(`‚úÖ –ù–û–í–ê–Ø 3D –º–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞: ${modelId}`);

      return NextResponse.json({
        success: true,
        data: {
          modelId,
          fileUrl: modelUrl,
          previewUrl: previewUrl,
          metadata
        }
      });
      
    } catch (hfError) {
      console.warn('–û—Å–Ω–æ–≤–Ω–æ–π pipeline –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –∫ fallback:', hfError);
      
      // ‚úÖ FALLBACK —Ç–æ–∂–µ –ò–°–ü–†–ê–í–õ–ï–ù: —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –ù–ê –û–°–ù–û–í–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!
      console.log('üöÄ FALLBACK: –ò—Å–ø–æ–ª—å–∑—É—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Image-to-3D pipeline!');
      
      // –°–æ–∑–¥–∞–µ–º SVG placeholder –∫–∞–∫ "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
      const placeholderSvg = `<svg width="400" height="400" xmlns="http://www.w3.org/2000/svg">
        <rect width="400" height="400" fill="#1a1a1a"/>
        <circle cx="200" cy="200" r="80" fill="#00ff00" stroke="#60a5fa" stroke-width="3"/>
        <text x="200" y="300" text-anchor="middle" fill="#00ff00" font-size="16">‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π Pipeline!</text>
        <text x="200" y="320" text-anchor="middle" fill="#9ca3af" font-size="14">${prompt}</text>
        <text x="200" y="340" text-anchor="middle" fill="#6b7280" font-size="12">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Üí 3D –º–æ–¥–µ–ª—å</text>
      </svg>`;
      const mockImage = new Blob([placeholderSvg], { type: 'image/svg+xml' });
      
      // –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: —Å–æ–∑–¥–∞–µ–º 3D –º–æ–¥–µ–ª—å –ù–ê –û–°–ù–û–í–ï –º–æ–∫-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!
      const objContent = await generateModelFromImage(mockImage, enhancedPrompt);
      console.log(`üìê Fallback: 3D –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É pipeline`);
      console.log(`üìä –†–∞–∑–º–µ—Ä: ${objContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`üéØ –ü—Ä–æ–º–ø—Ç: "${prompt}"`);
      
      const previewImage = mockImage; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ SVG
      
      const modelFile = new Blob([objContent], { type: 'text/plain' });

      const modelFileName = `${modelId}.obj`;
      const previewFileName = `${modelId}_preview.svg`;
      
      const modelPath = path.join(modelDir, modelFileName);
      const previewPath = path.join(modelDir, previewFileName);

      const modelBuffer = Buffer.from(await modelFile.arrayBuffer());
      const previewBuffer = Buffer.from(await previewImage.arrayBuffer());

      await writeFile(modelPath, modelBuffer);
      await writeFile(previewPath, previewBuffer);

      const modelUrl = `/models/${modelId}/${modelFileName}`;
      const previewUrl = `/models/${modelId}/${previewFileName}`;

      const metadata = {
        id: modelId,
        title: prompt,
        prompt: enhancedPrompt,
        author: 'Anonymous',
        fileUrl: modelUrl,
        previewImageUrl: previewUrl,
        isPublic: false,
        likes: 0,
        downloads: 0,
        fileSize: `${Math.round(modelBuffer.length / 1024)} KB`,
        formats: ['OBJ'],
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      };

      const metadataPath = path.join(modelDir, 'metadata.json');
      await writeFile(metadataPath, JSON.stringify(metadata, null, 2));

      console.log(`Mock 3D model generated successfully: ${modelId}`);

      return NextResponse.json({
        success: true,
        data: {
          modelId,
          fileUrl: modelUrl,
          previewUrl: previewUrl,
          metadata
        }
      });
    }

  } catch (error) {
    console.error('Error generating 3D model:', error);
    
    return NextResponse.json(
      { 
        success: false, 
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏' 
      },
      { status: 500 }
    );
  }
}